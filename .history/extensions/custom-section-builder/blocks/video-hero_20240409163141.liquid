
{% schema %}
{
"name": "Video Hero",
"class": "video-hero",
"target": "section",
"settings": [
{
"type": "header",
"content": "Video Settings"
},
{
"type": "select",
"id": "video_source",
"label": "Video Source",
"options": [
{
"value": "upload",
"label": "Upload a Video"
},
{
"value": "url",
"label": "External Video URL (YouTube/Vimeo)"
}
],
"default": "upload"
},
{
"type": "video",
"id": "video",
"label": "Standard Video",
"info": "Upload a video file. Used when 'Upload a Video' is selected."
},
{
"type": "text",
"id": "video_url",
"label": "External Video URL",
"info": "Enter the YouTube/Vimeo video URL. Used when 'External Video URL' is selected.",
"default": "https://www.youtube.com/watch?v=_9VUPq3SxOc"
},
{
"type": "range",
"id": "video_hero_height",
"label": "Video Height",
"min": 50,
"max": 100,
"step": 5,
"unit": "vh",
"default": 80
},
{
"type": "video",
"id": "mobile_video",
"label": "Vertical Video for Mobile",
"info": "Preferably in a vertical (9:16) format. Used when 'Use Vertical Video on Mobile' is enabled."
},
{
"type": "checkbox",
"id": "enable_mobile_video",
"label": "Use Vertical Video on Mobile",
"default": false,
"info": "Switches to the vertical video for mobile viewers."
},
{
"type": "image_picker",
"id": "cover_image",
"label": "Cover Image",
"info": "Optionally select a cover image to display before the video plays."
},
{
"type": "text",
"id": "description",
"label": "Video Description - ALT Text",
"info": "Provide ALT text for the video, improving SEO and accessibility."
},
{
"type": "select",
"id": "video_behavior",
"label": "Video Behavior",
"options": [
{
"value": "autoplay",
"label": "Autoplay"
},
{
"value": "cover",
"label": "Show Cover Image"
}
],
"default": "autoplay"
},
{
"type": "header",
"content": "General Settings"
},
{
"type": "text",
"id": "heading",
"label": "Main Title",
"default": "Your Main Title Here"
},
{
"type": "color",
"id": "heading_color",
"label": "Main Title Color",
"default": "#000000"
},
{
"type": "text",
"id": "subtext",
"label": "Subtitle",
"default": "Your Subtitle Here"
},
{
"type": "color",
"id": "subtext_color",
"label": "Subtitle Color",
"default": "#000000"
},
{
"type": "header",
"content": "Button Settings"
},
{
"type": "text",
"id": "button_text",
"label": "Button Text",
"default": "Learn More"
},
{
"type": "url",
"id": "button_link",
"label": "Button Link",
"default": "/"
},
{
"type": "color",
"id": "button_color",
"label": "Button Color",
"default": "#000000"
},
{
"type": "color",
"id": "button_text_color",
"label": "Button Text Color",
"default": "#FFFFFF"
},
{
"type": "color",
"id": "button_hover_color",
"label": "Button Hover Color",
"default": "#FFFFFF"
},
{
"type": "color",
"id": "button_hover_text_color",
"label": "Button Hover Text Color",
"default": "#000000"
},
{
"type": "checkbox",
"id": "enable_rounded_button",
"label": "Rounded Button",
"default": false,
"info": "Toggle to make the button oval-shaped."
},
{
"type": "header",
"content": "Mobile Display Settings"
},
{
"type": "checkbox",
"id": "show_heading_on_mobile",
"label": "Display Main Title on Mobile",
"default": true
},
{
"type": "checkbox",
"id": "show_subtext_on_mobile",
"label": "Display Subtitle on Mobile",
"default": true

},
{
"type": "checkbox",
"id": "show_button_on_mobile",
"label": "Display Button on Mobile",
"default": true
},
{
"type": "header",

"content": "Layout Settings"
},
{
"type": "range",
"id": "padding_top",
"label": "Padding Top",
"min": 0,
"max": 100,
"step": 1,
"unit": "px",
"default": 5
},
{
"type": "range",
"id": "padding_bottom",
"label": "Padding Bottom",
"min": 0,
"max": 100,
"step": 1,
"unit": "px",
"default": 5
}
]
}

{% endschema %}

<div class="video-hero" style="padding-top: {{ block.settings.padding_top }}px; padding-bottom: {{ block.settings.padding_bottom }}px; height: {{ block.settings.video_hero_height }}vh;" data-enable-mobile-video="{{ block.settings.enable_mobile_video }}"> {% if block.settings.video_source == 'url' and block.settings.video_url != blank %} <div class="video-wrapper"> {% if block.settings.cover_image != blank and block.settings.video_behavior == 'cover' %} <div class="cover-image-container"> <img src="{{ block.settings.cover_image | img_url: 'master' }}" alt="{{ block.settings.description }}" class="video-hero-poster" /> <button class="video-play-button" aria-label="Play video" data-video-url="{{ block.settings.video_url }}"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="icon icon-play"><path fill="currentColor" d="M8 5v14l11-7z"/></svg> </button> </div> {% else %} <div class="youtube-video-container" data-video-url="{{ block.settings.video_url }}"></div> {% endif %} </div> {% else %} <div class="video-wrapper"> {% if block.settings.cover_image != blank and block.settings.video_behavior == 'cover' %} <div class="cover-image-container"> <img src="{{ block.settings.cover_image | img_url: 'master' }}" alt="{{ block.settings.description }}" class="video-hero-poster" /> <button class="video-play-button" aria-label="Play video"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="icon icon-play"><path fill="currentColor" d="M8 5v14l11-7z"/></svg> </button> </div> {% endif %} <video class="video-hero-background {% if block.settings.enable_mobile_video %}desktop{% endif %}" playsinline {% if block.settings.video_behavior == 'autoplay' %}autoplay{% endif %} muted loop> {% for source in block.settings.video.sources %} <source src="{{ source.url }}" type="{{ source.mime_type }}"> {% endfor %} Your browser does not support the video tag. </video> {% if block.settings.enable_mobile_video and block.settings.mobile_video != blank %} <video class="video-hero-background mobile" playsinline {% if block.settings.video_behavior == 'autoplay' %}autoplay{% endif %} muted loop> <source src="{{ block.settings.mobile_video | file_url }}" type="video/mp4"> Your browser does not support the video tag. </video> {% endif %} </div> {% endif %} {% unless block.settings.cover_image != blank and block.settings.video_behavior == 'cover' %} <div class="video-hero-overlay"> <h1 class="video-hero-text" style="color: {{ block.settings.heading_color }};">{{ block.settings.heading }}</h1> <p class="video-hero-subtext" style="color: {{ block.settings.subtext_color }};">{{ block.settings.subtext }}</p> <div class="video-hero-button-container"> <a href="{{ block.settings.button_link }}" class="video-hero-button {% if block.settings.enable_rounded_button %}rounded-button{% endif %}" style="background-color: {{ block.settings.button_color }}; color: {{ block.settings.button_text_color }};" onmouseover="this.style.backgroundColor='{{ block.settings.button_hover_color }}'; this.style.color='{{ block.settings.button_hover_text_color }}';" onmouseout="this.style.backgroundColor='{{ block.settings.button_color }}'; this.style.color='{{ block.settings.button_text_color }}';"> {{ block.settings.button_text }} </a> </div> </div> {% endunless %} </div>