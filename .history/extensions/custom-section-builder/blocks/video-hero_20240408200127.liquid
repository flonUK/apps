
{% schema %}
{
"name": "Video Hero",
"class": "video-hero",
"target": "section",
"disabled_on": {
"groups": ["header", "footer"]
},
"settings": [
{
"type": "header",
"content": "Video Settings"
},
{
"type": "select",
"id": "video_source",
"label": "Video Source",
"options": [
{
"value": "upload",
"label": "Upload a Video"
},
{
"value": "url",
"label": "External Video URL (YouTube/Vimeo)"
}
],
"default": "upload"
},
{
"type": "video",
"id": "video",
"label": "Standard Video",
"info": "Upload a video file. Used when 'Upload a Video' is selected."
},
{
"type": "text",
"id": "video_url",
"label": "External Video URL",
"info": "Enter the YouTube/Vimeo video URL. Used when 'External Video URL' is selected."
},
{
"type": "range",
"id": "video_hero_height",
"label": "Video Height",
"min": 50,
"max": 100,
"step": 5,
"unit": "vh",
"default": 80
},
{
"type": "video",
"id": "mobile_video",
"label": "Vertical Video for Mobile",
"info": "Preferably in a vertical (9:16) format. Used when 'Use Vertical Video on Mobile' is enabled."
},
{
"type": "checkbox",
"id": "enable_mobile_video",
"label": "Use Vertical Video on Mobile",
"default": false,
"info": "Switches to the vertical video for mobile viewers."
},
{
"type": "image_picker",
"id": "cover_image",
"label": "Cover Image",
"info": "Optionally select a cover image to display before the video plays."
},
{
"type": "text",
"id": "description",
"label": "Video Description - ALT Text",
"info": "Provide ALT text for the video, improving SEO and accessibility."
},
{
"type": "select",
"id": "video_behavior",
"label": "Video Behavior",
"options": [
{
"value": "autoplay",
"label": "Autoplay"
},
{
"value": "cover",
"label": "Show Cover Image"
}
],
"default": "autoplay"
},
{
"type": "header",
"content": "General Settings"
},
{
"type": "text",
"id": "heading",
"label": "Main Title",
"default": "Your Main Title Here"
},
{
"type": "color",
"id": "heading_color",
"label": "Main Title Color",
"default": "#000000"
},
{
"type": "text",
"id": "subtext",
"label": "Subtitle",
"default": "Your Subtitle Here"
},
{
"type": "color",
"id": "subtext_color",
"label": "Subtitle Color",
"default": "#000000"
},
{
"type": "header",
"content": "Button Settings"
},
{
"type": "text",
"id": "button_text",
"label": "Button Text",
"default": "Learn More"
},
{
"type": "url",
"id": "button_link",
"label": "Button Link",
"default": "/"
},
{
"type": "color",
"id": "button_color",
"label": "Button Color",
"default": "#000000"
},
{
"type": "color",
"id": "button_text_color",
"label": "Button Text Color",
"default": "#FFFFFF"
},
{
"type": "color",
"id": "button_hover_color",
"label": "Button Hover Color",
"default": "#FFFFFF"
},
{
"type": "color",
"id": "button_hover_text_color",
"label": "Button Hover Text Color",
"default": "#000000"
},
{
"type": "checkbox",
"id": "enable_rounded_button",
"label": "Rounded Button",
"default": true,
"info": "Toggle to make the button oval-shaped."
},
{
"type": "header",
"content": "Mobile Display Settings"
},
{
"type": "checkbox",
"id": "show_heading_on_mobile",
"label": "Display Main Title on Mobile",
"default": false
},
{
"type": "checkbox",
"id": "show_subtext_on_mobile",
"label": "Display Subtitle on Mobile",
"default": false
},
{
"type": "checkbox",
"id": "show_button_on_mobile",
"label": "Display Button on Mobile",
"default": true
},
{
"type": "header",
"content": "Layout Settings"
},
{
"type": "range",
"id": "padding_top",
"min": 0,
"max": 100,
"step": 1,
"unit": "px",
"label": "Padding Top",
"default": 5
},
{
"type": "range",
"id": "padding_bottom",
"min": 0,
"max": 100,
"step": 1,
"unit": "px",
"label": "Padding Bottom",
"default": 5
}
]
}
{% endschema %}

{{ 'video-hero.css' | asset_url | stylesheet_tag }}
<script src="{{ 'video-hero.js' | asset_url }}" defer></script> 

<div class="video-hero" style="padding-top: {{ block.settings.padding_top }}px; padding-bottom: {{ block.settings.padding_bottom }}px; height: {{ block.settings.video_hero_height }}vh;"> {% case block.settings.video_source %} {% when 'url' %} <!-- External Video URL Handling --> {% assign video_id_youtube = block.settings.video_url | split: "v=" | last | split: "&" | first %} {% assign video_id_vimeo = block.settings.video_url | split: "/" | last %}
<div class="video-wrapper">
  {% if block.settings.video_behavior == 'cover' and block.settings.cover_image != blank %}
    <div class="cover-image-container" style="background-image: url({{ block.settings.cover_image | img_url: 'master' }});">
      <button class="video-play-button">
        <svg class="icon" viewBox="0 0 24 24">
          <path d="M8 5v14l11-7z"/>
          <path d="M0 0h24v24H0z" fill="none"/>
        </svg>
      </button>
    </div>
  {% endif %}

  {% if block.settings.video_url contains "youtube" %}
    <iframe class="video-hero-background {% if block.settings.video_behavior == 'autoplay' %}autoplay{% endif %}" width="100%" height="100%" src="https://www.youtube.com/embed/{{ video_id_youtube }}?autoplay={% if block.settings.video_behavior == 'autoplay' %}1{% else %}0{% endif %}&mute=1&enablejsapi=1&loop=1&playlist={{ video_id_youtube }}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
  {% elsif block.settings.video_url contains "vimeo" %}
    <iframe class="video-hero-background {% if block.settings.video_behavior == 'autoplay' %}autoplay{% endif %}" width="100%" height="100%" src="https://player.vimeo.com/video/{{ video_id_vimeo }}?autoplay={% if block.settings.video_behavior == 'autoplay' %}1{% else %}0{% endif %}&loop=1&muted=1" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen></iframe>
  {% endif %}
</div>
{% when 'upload' %}
<!-- Uploaded Video Handling -->
<div class="video-wrapper">
  {% if block.settings.enable_mobile_video and block.settings.mobile_video %}
    <!-- Mobile Video -->
    {% if block.settings.video_behavior == 'cover' and block.settings.cover_image != blank %}
      <div class="cover-image-container mobile-only" style="background-image: url({{ block.settings.cover_image | img_url: 'master' }});">
        <button class="video-play-button">
          <svg class="icon" viewBox="0 0 24 24">
            <path d="M8 5v14l11-7z"/>
            <path d="M0 0h24v24H0z" fill="none"/>
          </svg>
        </button>
      </div>
    {% endif %}
    
    <video class="video-hero-background mobile-video {% if block.settings.video_behavior == 'autoplay' %}autoplay{% endif %}" playsinline muted loop>
      {% for source in block.settings.mobile_video.sources %}
        <source src="{{ source.url }}" type="{{ source.mime_type }}">
      {% endfor %}
    </video>
  {% else %}
    <!-- Desktop/Standard Video -->
    {% if block.settings.video_behavior == 'cover' and block.settings.cover_image != blank %}
      <div class="cover-image-container desktop-only" style="background-image: url({{ block.settings.cover_image | img_url: 'master' }});">
        <button class="video-play-button">
          <svg class="icon" viewBox="0 0 24 24">
            <path d="M8 5v14l11-7z"/>
            <path d="M0 0h24v24H0z" fill="none"/>
          </svg>
        </button>
      </div>
    {% endif %}
    
    <video class="video-hero-background desktop-video {% if block.settings.video_behavior == 'autoplay' %}autoplay{% endif %}" playsinline muted loop>
      {% for source in block.settings.video.sources %}
        <source src="{{ source.url }}" type="{{ source.mime_type }}">
      {% endfor %}
    </video>
  {% endif %}
</div>
